// Code generated by sqlc. DO NOT EDIT.

package postgres

import (
	"database/sql"
	"fmt"
	"time"

	"github.com/google/uuid"
)

type AccountState string

const (
	AccountStateActive   AccountState = "active"
	AccountStateInactive AccountState = "inactive"
	AccountStateArchived AccountState = "archived"
)

func (e *AccountState) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = AccountState(s)
	case string:
		*e = AccountState(s)
	default:
		return fmt.Errorf("unsupported scan type for AccountState: %T", src)
	}
	return nil
}

type PolicyAction string

const (
	PolicyActionCreate PolicyAction = "create"
	PolicyActionRead   PolicyAction = "read"
	PolicyActionUpdate PolicyAction = "update"
	PolicyActionDelete PolicyAction = "delete"
)

func (e *PolicyAction) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = PolicyAction(s)
	case string:
		*e = PolicyAction(s)
	default:
		return fmt.Errorf("unsupported scan type for PolicyAction: %T", src)
	}
	return nil
}

type PolicyEffect string

const (
	PolicyEffectAllow PolicyEffect = "allow"
	PolicyEffectDeny  PolicyEffect = "deny"
)

func (e *PolicyEffect) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = PolicyEffect(s)
	case string:
		*e = PolicyEffect(s)
	default:
		return fmt.Errorf("unsupported scan type for PolicyEffect: %T", src)
	}
	return nil
}

type ThingState string

const (
	ThingStateActive   ThingState = "active"
	ThingStateInactive ThingState = "inactive"
	ThingStatePassive  ThingState = "passive"
	ThingStateArchived ThingState = "archived"
)

func (e *ThingState) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = ThingState(s)
	case string:
		*e = ThingState(s)
	default:
		return fmt.Errorf("unsupported scan type for ThingState: %T", src)
	}
	return nil
}

type Dataset struct {
	Uuid      uuid.UUID
	Name      string
	Format    string
	Content   []byte
	Checksum  []byte
	Size      int32
	BelongsTo uuid.UUID
	Created   time.Time
	Updated   time.Time
	CreatedBy uuid.UUID
	UpdatedBy uuid.UUID
	Tags      []string
}

type Group struct {
	Uuid uuid.UUID
	Name string
}

type GroupPolicy struct {
	Uuid      uuid.UUID
	GroupUuid uuid.UUID
	Priority  int32
	Effect    PolicyEffect
	Action    PolicyAction
	Resource  string
}

type Program struct {
	Uuid     uuid.UUID
	Name     string
	Type     string
	State    string
	Schedule string
	Deadline int32
	Language string
	Tags     []string
}

type ProgramCodeRevision struct {
	ProgramUuid uuid.UUID
	Revision    int32
	Created     time.Time
	Signed      sql.NullTime
	CreatedBy   uuid.UUID
	SignedBy    uuid.UUID
	Code        []byte
	Checksum    []byte
}

type Thing struct {
	Uuid      uuid.UUID
	Name      string
	Type      sql.NullString
	State     ThingState
	CreatedBy uuid.UUID
	Tags      []string
}

type ThingDep struct {
	Parent uuid.UUID
	Child  uuid.UUID
}

type Timeseries struct {
	Uuid       uuid.UUID
	ThingUuid  uuid.UUID
	Name       string
	SiUnit     string
	LowerBound sql.NullFloat64
	UpperBound sql.NullFloat64
	CreatedBy  uuid.UUID
	Tags       []string
}

type Tsdatum struct {
	TsUuid    uuid.UUID
	Value     float64
	Ts        time.Time
	CreatedBy uuid.UUID
}

type User struct {
	Uuid  uuid.UUID
	Name  string
	State AccountState
}

type UserGroup struct {
	UserUuid  uuid.UUID
	GroupUuid uuid.UUID
}

type UserToken struct {
	Uuid      uuid.UUID
	UserUuid  uuid.UUID
	Name      string
	TokenHash []byte
	Created   time.Time
}
